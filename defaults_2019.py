#%%

import pandas as pd
import numpy as np

lut = pd.read_csv('../../data/ipcc_lut.csv')
country_to_iso3 = lut.set_index('country')['iso3'].to_dict()

#%%

waste_fraction_defaults = {'Australia and New Zealand' : [0.259, 0.122, 0.065, 0.12, 0.029, 0.083, 0.018, 0.028, 0.0, 0.276, 1.0000001],
                            'Caribbean' : [0.469, 0.0000001, 0.024, 0.17, 0.051, 0.099, 0.05, 0.057, 0.019, 0.035, 0.9740001],
                            'Central America' : [0.627, 0, 0.003, 0.126, 0.022, 0.103, 0.027, 0.033, 0, 0.06, 1.001],
                            'Eastern Africa' : [0.444, 0.069, 0.005, 0.104, 0.03, 0.08, 0.026, 0.021, 0.004, 0.217, 1],
                            'Eastern Asia' : [0.403, 0, 0.021, 0.204, 0.01, 0.065, 0.027, 0.043, 0, 0.229, 1.002],
                            'Eastern Europe' : [0.318, 0.024, 0.025, 0.171, 0.031, 0.046, 0.007, 0.018, 0.005, 0.354, 0.999],
                            'Middle Africa' : [0.284, 0, 0, 0.08, 0.013, 0.071, 0.014, 0.011, 0.0000001, 0.527, 1.0000001],
                            "North America" : [0.202, 0.068, 0.041, 0.233, 0.039, 0.158, 0.064, 0.042, 0.016, 0.14, 1.003],
                            "Northern Africa" : [0.504, 0, 0, 0.121, 0.058, 0.138, 0.044, 0.033, 0.0000001, 0.105, 1.0030001],
                            "Northern Europe" : [0.303, 0.052, 0.018, 0.138, 0.032, 0.049, 0.014, 0.043, 0, 0.352, 1.001],
                            "Rest of Oceania" : [0.675, 0.0000001, 0.025, 0.06, 0.0000001, 0.0000001, 0.0000001, 0.0000001, 0.0000001, 0.0000001, 0.7600007],
                            "South America" : [0.541, 0.033, 0, 0.124, 0.017, 0.137, 0.02, 0.03, 0.006, 0.091, 0.999],
                            "Central Asia" : [0.3, 0.014, 0.025, 0.247, 0.035, 0.084, 0.008, 0.059, 0, 0.23, 1.002],
                            "South-Eastern Asia" : [0.499, 0.01, 0.008, 0.112, 0.004, 0.102, 0.042, 0.037, 0, 0.186, 1],
                            "Southern Africa" : [0.24, 0, 0, 0.145, 0.055, 0.265, 0.065, 0.09, 0, 0.14, 1],
                            "Southern Europe" : [0.358, 0.014, 0.012, 0.214, 0.028, 0.141, 0.02, 0.035, 0.002, 0.178, 1.002],
                            "Western Africa" : [0.539, 0, 0, 0.075, 0.019, 0.064, 0.027, 0.013, 0, 0.265, 1.002],
                            "Western Asia" : [0.422, 0.032, 0.008, 0.153, 0.03, 0.172, 0.025, 0.034, 0.003, 0.122, 1.001],
                            "Western Europe" : [0.332, 0.027, 0.023, 0.172, 0.059, 0.205, 0.015, 0.014, 0, 0.153, 1],
                            "Southern Asia" : [0.661, 0, 0, 0.092, 0.012, 0.07, 0.009, 0.015, 0.004, 0.139, 1.002]}

waste_fraction_defaults = pd.DataFrame(waste_fraction_defaults).T
waste_fraction_defaults.columns = ['food', 'green', 'wood', 'paper_cardboard', 'textiles', 'plastic', 'metal', 'glass', 'rubber', 'other', 'total']
waste_fraction_defaults = waste_fraction_defaults.drop('total', axis=1)
#waste_fraction_defaults.head()
#waste_fraction_defaults = waste_fraction_defaults.T.to_dict()

# Ah shit hungary is wrong. 
waste_fractions_country = {
    "Kazakhstan": [21.5, 2.8, 26.5, 0.0, 7.0, 0.0, 0.0, 16.8, 1.5, 11.8, 11.9],
    "Uzbekistan": [38.4, 0.0, 22.8, 4.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 34.0],
    "China": [59.1, 0.0, 8.5, 1.6, 4.1, 0.0, 0.0, 13.0, 1.1, 4.1, 8.5],
    "Japan": [26.0, 0.0, 46.0, 0.0, 0.0, 0.0, 0.0, 9.0, 8.0, 7.0, 4.0],
    "Mongolia": [70.8, 0.0, 4.3, 0.0, 0.0, 0.0, 0.0, 3.8, 0.1, 3.7, 17.3],
    "Republic of Korea": [5.2, 0.0, 22.6, 6.6, 0.0, 0.0, 0.0, 0.0, 1.7, 2.3, 61.7],
    "Cambodia": [65.0, 0.0, 4.0, 0.0, 0.0, 0.0, 0.0, 13.0, 1.0, 5.0, 12.0],
    "Indonesia": [74.0, 0.0, 10.0, 0.0, 2.0, 0.0, 0.0, 8.0, 2.0, 2.0, 2.0],
    "Lao PDR": [54.3, 0.0, 3.3, 0.0, 0.0, 0.0, 0.0, 7.8, 3.8, 8.5, 22.3],
    "Malaysia": [32.4, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 9.8, 2.5, 3.3, 32.0],
    "Myanmar": [80.0, 0.0, 4.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 14.0],
    "Philippines": [41.6, 0.0, 19.5, 0.0, 0.0, 0.0, 0.0, 13.8, 4.8, 2.5, 17.8],
    "Singapore": [10.1, 4.1, 15.1, 6.8, 1.9, 0.0, 0.4, 10.5, 18.6, 0.9, 31.4],
    "Thailand": [48.6, 0.0, 14.6, 0.0, 0.0, 0.0, 0.0, 13.9, 3.6, 5.1, 14.2],
    "Viet Nam": [42.7, 5.0, 10.7, 0.0, 0.0, 0.0, 0.0, 12.9, 1.1, 5.8, 21.9],
    "Bangladesh": [54.9, 0.0, 12.6, 0.0, 4.7, 0.0, 1.5, 14.7, 1.6, 1.1, 8.8],
    "India": [53.0, 0.0, 6.4, 0.0, 0.0, 0.0, 0.0, 5.1, 0.2, 0.4, 35.0],
    "Nepal": [80.0, 0.0, 7.0, 0.0, 0.0, 0.0, 0.0, 2.5, 0.5, 3.0, 7.0],
    "Sri Lanka": [76.4, 0.0, 10.6, 0.0, 0.0, 0.0, 0.0, 5.7, 1.3, 1.3, 4.7],
    "Cyprus": [34.2, 13.1, 22.5, 0.0, 0.0, 0.0, 0.0, 6.7, 0.8, 5.3, 17.4],
    "Iraq": [54.8, 0.0, 7.0, 2.6, 3.5, 0.0, 0.5, 25.2, 3.0, 2.9, 0.4],
    "Jordan": [52.0, 0.0, 13.0, 0.0, 0.0, 0.0, 0.0, 17.0, 1.0, 3.0, 14.0],
    "Oman": [8.2, 6.1, 19.4, 1.4, 14.3, 0.0, 0.0, 31.3, 2.6, 2.9, 13.8],
    "Saudi Arabia": [48.0, 0.0, 21.0, 1.0, 0.0, 0.0, 0.0, 13.0, 6.0, 4.0, 7.0],
    "Palestine": [56.6, 0.0, 7.3, 0.0, 0.0, 0.0, 0.0, 14.0, 2.4, 2.0, 17.7],
    "Turkey": [48.7, 6.8, 8.1, 0.0, 2.9, 2.9, 0.0, 5.9, 1.4, 3.4, 19.9],
    "United Arab Emirates": [35.4, 0.0, 24.3, 1.0, 3.2, 0.0, 1.7, 24.2, 2.4, 3.4, 4.4],
    "Libya": [36.3, 0.0, 15.3, 0.0, 11.5, 0.0, 0.0, 18.6, 6.7, 3.5, 8.0],
    "Tunisia": [64.4, 0.0, 8.9, 0.0, 0.0, 0.0, 0.0, 8.9, 2.0, 3.0, 12.9],
    "Kenya": [64.4, 0.0, 5.9, 0.0, 0.0, 0.0, 0.0, 11.9, 1.0, 2.0, 14.9],
    "Mauritius": [29.4, 34.7, 14.1, 0.0, 2.4, 0.0, 0.0, 11.7, 2.0, 1.2, 4.4],
    "Tanzania": [57.1, 0.0, 10.9, 2.4, 6.7, 0.0, 0.0, 9.3, 1.9, 3.2, 8.4],
    "Zambia": [39.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 7.0, 1.0, 2.0, 48.0],
    "Zimbabwe": [32.0, 0.0, 18.0, 0.0, 6.0, 0.0, 2.0, 0.0, 7.0, 2.0, 33.0],
    "Cameroon": [28.4, 0.0, 8.0, 0.0, 1.3, 0.0, 0.0, 7.1, 1.4, 1.1, 52.7],
    "South Africa": [24.0, 0.0, 14.5, 0.0, 5.5, 0.0, 0.0, 26.5, 6.5, 9.0, 14.0],
    "Ghana": [73.0, 0.0, 8.0, 0.0, 4.0, 0.0, 0.0, 8.0, 0.0, 0.0, 7.0],
    "Mali": [25.0, 0.0, 4.8, 0.0, 0.0, 0.0, 0.0, 2.4, 4.8, 1.2, 61.9],
    "Nigeria": [63.6, 0.0, 9.7, 0.0, 1.6, 0.0, 0.0, 8.7, 3.2, 2.6, 10.6],
    "Bulgaria": [18.7, 10.0, 13.4, 1.7, 3.6, 0.0, 1.9, 0.0, 0.0, 0.0, 50.8],
    "Czechia": [35.0, 0.0, 16.0, 13.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 28.0],
    "Hungary": [29.0, 0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 17.0, 2.0, 2.0, 35.0],
    "Poland": [35.9, 0.3, 14.7, 0.6, 3.7, 0.0, 0.0, 0.0, 0.0, 0.0, 44.8],
    "Republic of Moldova": [29.2, 0.0, 10.1, 0.0, 1.6, 0.0, 0.0, 12.8, 1.5, 5.7, 39.0],
    "Romania": [43.5, 5.3, 10.3, 1.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 39.2],
    "Russian Federation": [30.2, 0, 42.5, 1.5, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 21.8],
    "Ukraine": [33.1, 3.8, 14.6, 1.7, 4.0, 1.1, 1.7, 6.9, 2.0, 6.9, 24.2],
    "Denmark": [41.0, 4.1, 23.2, 0.0, 0.0, 0.0, 0.0, 9.2, 3.3, 2.9, 16.3],
    "Estonia": [26.0, 12.0, 20.0, 3.0, 2.0, 0.0, 0.0, 9.0, 4.0, 6.0, 18.0],
    "Finland": [35.1, 8.8, 20.8, 2.2, 1.7, 0.0, 0.0, 7.9, 0.0, 0.5, 23.0],
    "Iceland": [41.2, 1.4, 10.3, 3.0, 3.5, 5.1, 0.0, 0.0, 0.0, 0.0, 35.4],
    "Latvia": [0.0, 0.0, 6.4, 2.1, 0.0, 0.0, 0.0, 8.5, 2.4, 20.6, 60.0],
    "Lithuania": [25.5, 0.0, 5.7, 1.2, 7.2, 0.0, 0.0, 0.0, 0.0, 0.0, 60.4],
    "Sweden": [43.0, 10.0, 10.0, 1.0, 8.0, 3.0, 0.0, 0.0, 0.0, 0.0, 25.0],
    "Croatia": [30.9, 5.7, 23.2, 1.0, 3.7, 4.0, 0.7, 22.9, 2.1, 3.7, 2.3],
    "Greece": [43.1, 0.0, 22.6, 1.0, 3.3, 0.0, 0.0, 11.1, 3.2, 4.2, 11.5],
    "Italy": [12.6, 0.0, 39.2, 0.0, 0.0, 0.0, 0.0, 27.6, 2.4, 5.9, 12.3],
    "Portugal": [31.8, 0.0, 10.0, 0.7, 8.1, 0.0, 0.0, 12.5, 1.6, 3.2, 32.2],
    "Serbia": [44.3, 0.0, 13.0, 0.0, 4.5, 4.0, 0.4, 13.9, 1.4, 4.2, 14.4],
    "Slovenia": [31.8, 2.0, 22.6, 5.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 38.0],
    "Spain": [56.2, 1.8, 19.0, 0.0, 0.0, 0.0, 0.0, 10.7, 3.0, 3.3, 6.0],
    "United Kingdom": [21.3, 3.5, 18.3, 5.3, 5.6, 3.1, 0.0, 18.0, 3.7, 3.0, 18.2],
    "Ireland": [17.0, 4.5, 19.8, 0.0, 23.4, 6.3, 0.0, 0.0, 0.0, 0.0, 29.1],
    "France": [18.8, 4.0, 14.9, 4.0, 3.0, 6.9, 0.0, 21.8, 0.0, 0.0, 26.7],
    "Germany": [63.2, 0.0, 15.5, 0.0, 5.0, 0.0, 0.0, 10.4, 2.8, 3.1, 0.0],
    "Luxembourg": [45.5, 5.0, 8.9, 5.0, 1.0, 5.0, 0.0, 29.7, 0.0, 0.0, 0.0],
    "Netherlands": [35.0, 0.0, 26.0, 0.0, 0.0, 0.0, 0.0, 19.0, 4.0, 4.0, 12.0],
    "Switzerland": [31.5, 1.7, 17.2, 1.8, 3.2, 0.0, 0.0, 44.6, 0.0, 0.0, 0.0],
    "Jamaica": [62.0, 0.0, 15.0, 1.0, 5.0, 0.0, 0.0, 12.0, 2.0, 3.0, 0.0],
    "Mexico": [51.4, 0.0, 13.6, 0.0, 1.5, 0.0, 0.0, 10.7, 5.1, 5.8, 12.0],
    "Nicaragua": [74.8, 0.0, 9.1, 0.0, 0.0, 0.0, 0.0, 8.1, 1.0, 1.0, 6.1],
    "Brazil": [53.5, 0.0, 17.6, 0.0, 0.0, 0.0, 0.0, 17.5, 2.2, 4.0, 5.3],
    "Argentina": [38.8, 10.0, 13.7, 0.0, 5.0, 5.7, 1.9, 14.6, 1.8, 3.1, 5.3],
    "Peru": [70.0, 0.0, 6.0, 0.0, 0.0, 0.0, 0.0, 9.0, 2.0, 2.0, 11.0],
    "Canada": [18.8, 5.6, 32.3, 0.0, 0.0, 0.0, 0.0, 13.1, 3.4, 3.1, 23.7],
    "United States of America": [21.6, 7.9, 14.3, 8.1, 7.7, 0.0, 3.1, 18.5, 9.4, 5.2, 4.2],
    "Australia": [35.0, 16.5, 13.0, 1.0, 0.0, 4.0, 0.0, 16.7, 3.6, 5.6, 4.6],
    "New Zealand": [16.8, 7.9, 10.9, 11.9, 5.9, 3.0, 0.0, 0.0, 0.0, 0.0, 43.6]
}

# #%%

# for country, fractions in waste_fractions_country.items():
#     assert len(fractions) == 11
#     assert country in lut['country'].values, country

# #%%
waste_fractions_country = {country_to_iso3[country]: value for country, value in waste_fractions_country.items()}
waste_fractions_country = pd.DataFrame(waste_fractions_country).T
waste_fractions_country.columns = ['food', 'green', 'paper_cardboard', 'wood', 'textiles', 'nappies', 'rubber', 'plastics', 'metal', 'glass', 'other']
waste_fractions_country['other'] += waste_fractions_country['nappies']
waste_fractions_country = waste_fractions_country.drop('nappies', axis=1)



region_lookup = {'China': 'Eastern Asia',
                 'Japan': 'Eastern Asia',
                 'Republic of Korea': 'Eastern Asia',
                 'Mongolia': 'Central Asia',
                 'Democratic People\'s Republic of Korea': 'Eastern Asia',
                 'Bangladesh': 'Southern Asia',
                 'India': 'Southern Asia',
                 'Nepal': 'Southern Asia',
                 'Sri Lanka': 'Southern Asia',
                 'Pakistan': 'Southern Asia',
                 'Brunei Darussalam': 'South-Eastern Asia',
                 'Cambodia': 'South-Eastern Asia',
                 'Indonesia': 'South-Eastern Asia',
                 'Lao People\'s Democratic Republic': 'South-Eastern Asia',
                 'Malaysia': 'South-Eastern Asia',
                 'Myanmar': 'South-Eastern Asia',
                 'Philippines': 'South-Eastern Asia',
                 'Singapore': 'South-Eastern Asia',
                 'Thailand': 'South-Eastern Asia',
                 'Vietnam ': 'South-Eastern Asia',
                 'Afghanistan': 'Central Asia',
                 'Kazakhstan': 'Central Asia',
                 'Tajikistan': 'Central Asia',
                 'Turkmenistan': 'Central Asia',
                 'Kyrgyzstan': 'Central Asia',
                 'Uzbekistan': 'Central Asia',
                 'Armenia': 'Western Asia',
                 'Georgia': 'Western Asia',
                 'Azerbaijan': 'Western Asia',
                 'Saudi Arabia': 'Western Asia',
                 'Iran': 'Western Asia',
                 'Iraq': 'Western Asia',
                 'Syrian Arab Republic': 'Western Asia',
                 'Lebanon': 'Western Asia',
                 'Israel': 'Western Asia',
                 'Kuwait': 'Western Asia',
                 'Jordan': 'Western Asia',
                 'Yemen': 'Western Asia',
                 'Oman': 'Western Asia',
                 'United Arab Emirates': 'Western Asia',
                 'Qatar': 'Western Asia',
                 'Bahrain': 'Western Asia',
                 'Egypt': 'Northern Africa',
                 'Libya': 'Northern Africa',
                 'Tunisia': 'Northern Africa',
                 'Algeria': 'Northern Africa',
                 'Morocco': 'Northern Africa',
                 'Sudan': 'Northern Africa',
                 'South Sudan': 'Northern Africa',
                 'Western Sahara': 'Northern Africa',
                 'Eritrea': 'Eastern Africa',
                 'Ethiopia': 'Eastern Africa',
                 'Somalia': 'Eastern Africa',
                 'Djibouti': 'Eastern Africa',
                 'Uganda': 'Eastern Africa',
                 'Kenya': 'Eastern Africa',
                 'Rwanda': 'Eastern Africa',
                 'Burundi': 'Eastern Africa',
                 'Tanzaia': 'Eastern Africa',
                 'Mauritanina': 'Western Africa',
                 'Senegal': 'Western Africa',
                 'The Gambia': 'Western Africa',
                 'Guinne-Bissau': 'Western Africa',
                 'Guinea': 'Western Africa',
                 'Sierra Leone': 'Western Africa',
                 'Liberia': 'Western Africa',
                 'Cote d\'Ivoire': 'Western Africa',
                 'Ghana': 'Western Africa',
                 'Togo': 'Western Africa',
                 'Benin': 'Western Africa',
                 'Nigeria': 'Western Africa',
                 'Mali': 'Middle Africa',
                 'Burkina Faso': 'Middle Africa',
                 'Niger': 'Middle Africa',
                 'Chad': 'Middle Africa',
                 'Central African Republic': 'Middle Africa',
                 'Cameroon': 'Middle Africa',
                 'Republic of Congo': 'Middle Africa',
                 'Democratic Republic of Congo': 'Middle Africa',
                 'Angola': 'Middle Africa',
                 'Zambia': 'Middle Africa',
                 'Gabon': 'Middle Africa',
                 'Malawi': 'Middle Africa',
                 'Namibia': 'Southern Africa',
                 'Botswana': 'Southern Africa',
                 'Zimbabwe': 'Southern Africa',
                 'Mozambique': 'Southern Africa',
                 'Madagascar': 'Southern Africa',
                 'South Africa': 'Southern Africa',
                 'Lesotho': 'Southern Africa',
                 'Eswatini': 'Southern Africa',
                 'Comoros': 'Southern Africa',
                 'Bulgaria': 'Eastern Europe',
                 'Croatioa': 'Eastern Europe',
                 'Serbia': 'Eastern Europe',
                 'Montenegro': 'Eastern Europe',
                 'Kosovo': 'Eastern Europe',
                 'Bosnia and Herzegovina': 'Eastern Europe',
                 'Albania': 'Eastern Europe',
                 'Czechia': 'Eastern Europe',
                 'Slovakia': 'Eastern Europe',
                 'Slovenia': 'Eastern Europe',
                 'Romania': 'Eastern Europe',
                 'Russian Federation': 'Eastern Europe',
                 'Ukraine': 'Eastern Europe',
                 'Belarus': 'Eastern Europe',
                 'Latvia': 'Eastern Europe',
                 'Lithuania': 'Eastern Europe',
                 'Estonia': 'Eastern Europe',
                 'Poland': 'Eastern Europe',
                 'Hungary': 'Eastern Europe',
                 'Republic of Moldova': 'Eastern Europe',
                 'Denmark': 'Northern Europe',
                 'Finland': 'Northern Europe',
                 'Sweden': 'Northern Europe',
                 'Norway': 'Northern Europe',
                 'Iceland': 'Northern Europe',
                 'Cyprus': 'Southern Europe',
                 'Greece': 'Southern Europe',
                 'Italy': 'Southern Europe',
                 'Malta': 'Southern Europe',
                 'Spain': 'Southern Europe',
                 'Portugal': 'Southern Europe',
                 'Turkey': 'Western Asia',
                 'Austria': 'Western Europe',
                 'Belgium': 'Western Europe',
                 'Netherlands': 'Western Europe',
                 'France': 'Western Europe',
                 'Germany': 'Western Europe',
                 'Ireland': 'Western Europe',
                 'Luxembourg': 'Western Europe',
                 'Switzerland': 'Western Europe',
                 'United Kingdom': 'Western Europe',
                 'Bahamas': 'Caribbean',
                 'Cuba': 'Caribbean',
                 'Dominican Republic': 'Caribbean',
                 'St. Lucia': 'Caribbean',
                 'Costa Rica': 'Central America',
                 'Guatemala': 'Central America',
                 'Hondruas': 'Central America',
                 'Nicarauga': 'Central America',
                 'Belize': 'Central America',
                 'Panama': 'Central America',
                 'El Salvador': 'Central America',
                 'Argentina': 'South America',
                 'Bolivia': 'South America',
                 'Brazil': 'South America',
                 'Chile': 'South America',
                 'Colombia': 'South America',
                 'Ecuador': 'South America',
                 'Paraguay': 'South America',
                 'Peru': 'South America',
                 'Uruguay': 'South America',
                 'Venezuela': 'South America',
                 'Canada': 'North America',
                 'Mexico': 'North America',
                 'United States of America': 'North America',
                 'American Samoa': 'North America',
                 'Australia': 'Australia and New Zealand',
                 'New Zealand': 'Australia and New Zealand',
                 'Fiji': 'Rest of Oceania',
                 'Papua New Guinea': 'Rest of Oceania',
                 'Bhutan': 'Southern Asia',
                 'Côte d’Ivoire': 'Western Africa',
                 'Ivory Coast': 'Western Africa',
                 'Congo, Dem. Rep.': 'Middle Africa',
                 'Congo, Rep.': 'Middle Africa',
                 'Czech Republic': 'Eastern Europe',
                 'Egypt, Arab Rep.': 'Northern Africa',
                 'Micronesia, Fed. Sts.': 'Rest of Oceania',
                 'Gambia, The': 'Western Africa',
                 'Equatorial Guinea': 'Middle Africa',
                 'Honduras': 'Central America',
                 'Croatia': 'Eastern Europe',
                 'Haiti': 'Caribbean',
                 'Isle of Man': 'Western Europe',
                 'Iran, Islamic Rep.': 'Western Asia',
                 'Kyrgyz Republic': 'Central Asia',
                 'Kiribati': 'Rest of Oceania',
                 'Korea, Rep.': 'Eastern Asia',
                 'Lao PDR': 'South-Eastern Asia',
                 'Moldova': 'Eastern Europe',
                 'Maldives': 'Southern Asia',
                 'Marshall Islands': 'Rest of Oceania',
                 'Macedonia, FYR': 'Eastern Europe',
                 'Northern Mariana Islands': 'Rest of Oceania',
                 'Mauritania': 'Western Africa',
                 'Nicaragua': 'Central America',
                 'Palau': 'Rest of Oceania',
                 'West Bank and Gaza': 'Western Asia',
                 'Solomon Islands': 'Rest of Oceania',
                 'Slovak Republic': 'Eastern Europe',
                 'Timor-Leste': 'South-Eastern Asia',
                 'Tonga': 'Rest of Oceania',
                 'Tuvalu': 'Rest of Oceania',
                 'Tanzania': 'Eastern Africa',
                 'United States': 'North America',
                 'Venezuela, RB': 'South America',
                 'Vietnam': 'South-Eastern Asia',
                 'Vanuatu': 'Rest of Oceania',
                 'Samoa': 'Rest of Oceania',
                 'Yemen, Rep.': 'Western Asia',
                 'Democratic Republic of the Congo': 'Middle Africa',
                 'DRC': 'Middle Africa',
                 'Micronesia': 'Rest of Oceania',
                 'Gambia': 'Western Africa',
                 'Macedonia': 'Eastern Europe',
                 'Mongolia ': 'Central Asia',
                 'Viet Nam': 'South-Eastern Asia',
                }


msw_per_capita_defaults = {
    'Australia and New Zealand' : 0.6,
    'Caribbean' : 0.78,
    'Central America' : 0.58,
    'Central Asia' : 0.34,
    'Eastern Africa' : 0.29,
    'Eastern Asia' : 0.48,
    'Eastern Europe' : 0.37,
    'Middle Africa' : 0.19,
    'North America' : 0.96,
    "Northern Africa" : 0.41,
    "Northern Europe" : 0.48,
    "Rest of Oceania" : (1.18 + 1.35)/2,
    "South America" : 0.43,
    "South-Eastern Asia" : 0.46,
    "Southern Africa" : 0.33,
    "Southern Asia" : 0.5,
    "Southern Europe" : 0.47,
    "Western Africa" : 0.18,
    "Western Asia" : 0.69,
    "Western Europe" : 0.59
}
msw_per_capita_defaults = {key: (value / 365) * 1000 for key, value in msw_per_capita_defaults.items()} # convert from tons/year to kg/day

msw_per_capita_country = {
    'Tajikistan': 0.32,
    'Turkmenistan': 0.36,
    'China': 0.37,
    'Japan': 0.35,
    'Mongolia': 0.24,
    'Republic of Korea': 0.35,
    'Brunei Darussalam': 0.32,
    'Lao PDR': 0.26,
    'Malaysia': 0.55,
    'Myanmar': 0.16,
    'Philippines': 0.18,
    'Singapore': 1.28,
    'Thailand': 0.64,
    'Viet Nam': 0.53,
    'Bangladesh': 0.18,
    'Bhutan': 0.53,
    'India': 0.12,
    'Iran': 0.06,
    'Maldives': 0.91,
    'Nepal': 0.04,
    'Pakistan': 0.31,
    'Sri Lanka': 1.86,
    'Armenia': 0.25,
    'Bahrain': 0.4,
    'Cyprus': 0.69,
    'Georgia': 0.62,
    'Israel': 0.62,
    'Jordan': 0.38,
    'Kuwait': 3.05,
    'Lebanon': 0.43,
    'Oman': 0.26,
    'Qatar': 1.25,
    'Saudi Arabia': 0.47,
    'Palestine': 0.38,
    'Syrian Arab Republic': 0.50,
    'Turkey': 0.41,
    'United Arab Emirates': 0.61,
    'Algeria': 0.44,
    'Egypt': 0.5,
    'Morocco': 0.53,
    'Sudan': 0.29,
    'Tunisia': 0.30,
    'Burundi': 0.20,
    'Comoros': 0.81,
    'Eritrea': 0.18,
    'Ethiopia': 0.11,
    'Kenya': 0.11,
    'Madagascar': 0.29,
    'Malawi': 0.18,
    'Mauritius': 0.31,
    'Mozambique': 0.05,
    'Reunion': 0.69,
    'Rwanda': 0.19,
    'Seychelles': 1.09,
    'Uganda': 0.12,
    'Tanzania': 0.09,
    'Zambia': 0.08,
    'Zimbabwe': 0.19,
    'Angola': 0.18,
    'Cameroon': 0.28,
    'Central African Republic': 0.18,
    'Chad': 0.18,
    'Congo': 0.18,
    'Democratic Republic of the Congo': 0.18,
    'Gabon': 0.16,
    'Sao Tome and Principe': 0.18,
    'Botswana': 0.38,
    'Lesotho': 0.18,
    'Namibia': 0.18,
    'South Africa': 0.73,
    'Swaziland': 0.19,
    'Benin': 0.20,
    'Burkina Faso': 0.19,
    'Cape Verde': 0.18,
    'Cote d\'Ivoire': 0.18,
    'Gambia': 0.19,
    'Ghana': 0.03,
    'Mali': 0.24,
    'Mauritania': 0.18,
    'Niger': 0.18,
    'Nigeria': 0.20,
    'Senegal': 0.19,
    'Sierra Leone': 0.16,
    'Togo': 0.19,
    'Belarus': 0.38,
    'Bulgaria': 0.55,
    'Czechia': 0.32,
    'Hungary': 0.40,
    'Poland': 0.32,
    'Romania': 0.31,
    'Russian Federation': 0.34,
    'Slovakia': 0.32,
    'Denmark': 0.76,
    'Estonia': 0.31,
    'Finland': 0.47,
    'Iceland': 0.48,
    'Ireland': 0.62,
    'Latvia': 0.32,
    'Lithuania': 0.40,
    'Norway': 0.47,
    'Sweden': 0.44,
    'United Kingdom': 0.51,
    'Bosnia and Herzegovina': 0.33,
    'Croatia': 0.38,
    'Greece': 0.53,
    'Italy': 0.55,
    'Malta': 0.6,
    'Montenegro': 0.54,
    'Portugal': 0.52,
    'Serbia': 0.36,
    'Slovenia': 0.49,
    'Spain': 0.51,
    'Macedonia': 0.35,
    'Austria': 0.56,
    'Belgium': 0.46,
    'France': 0.53,
    'Germany': 0.60,
    'Luxembourg': 0.68,
    'Netherlands': 0.57,
    'Switzerland': 0.71,
    'Anguilla': 1.10,
    'Antigua and Barbuda': 1.39,
    'Bahamas': 1.19,
    'Barbados': 1.73,
    'Cuba': 0.3,
    'Dominica': 0.32,
    'Dominican Republic': 0.43,
    'Grenada': 0.99,
    'Guadeloupe': 0.60,
    'Haiti': 0.37,
    'Jamaica': 0.07,
    'Saint Kitts and Nevis': 1.99,
    'Saint Lucia': 0.25,
    'Saint Vincent and the Grenadines': 0.35,
    'Trinidad and Tobago': 0.58,
    'Belize': 1.05,
    'Costa Rica': 0.5,
    'El Salvador': 0.41,
    'Guatemala': 0.73,
    'Honduras': 0.53,
    'Mexico': 0.34,
    'Nicaragua': 0.4,
    'Panama': 0.44,
    'Argentina': 0.37,
    'Bolivia': 0.12,
    'Brazil': 0.31,
    'Chile': 0.35,
    'Colombia': 0.35,
    'Ecuador': 0.41,
    'French Guiana': 0.37,
    'Guyana': 1.95,
    'Paraguay': 0.08,
    'Peru': 0.37,
    'Suriname': 0.50,
    'Uruguay': 0.04,
    'Venezuela': 0.42,
    'Bermuda': 1.3,
    'Canada': 0.85,
    'United States of America': 0.74,
    'Australia': 0.61,
    'New Zealand': 0.58,
    'Fiji': 0.77,
    'Solomon Islands': 1.57,
    'Vanuatu': 1.2,
    'Tonga': 1.35
}
msw_per_capita_country = {key: (value / 365) * 1000 for key, value in msw_per_capita_country.items()} # convert from tons/year to kg/day
msw_per_capita_country = {country_to_iso3[country]: value for country, value in msw_per_capita_country.items()}

msw_per_capita_city = {
    'Hong Kong' : 0.93,
    'Macao' : 0.62
}
msw_per_capita_city = {key: (value / 365) * 1000 for key, value in msw_per_capita_city.items()} # convert from tons/year to kg/day


k_defaults = {'Dry':            {'food': .1,  'diapers': .1,  'green': .05, 'paper_cardboard': .02,  'textiles': .02,  'wood': .01,  'rubber': .01},
              'Moderately Dry': {'food': .18, 'diapers': .18, 'green': .09, 'paper_cardboard': .036, 'textiles': .036, 'wood': .018, 'rubber': .018},
              'Moderately Wet': {'food': .26, 'diapers': .26, 'green': .12, 'paper_cardboard': .048, 'textiles': .048, 'wood': .024, 'rubber': .024},
              'Wet':            {'food': .34, 'diapers': .34, 'green': .15, 'paper_cardboard': .06,  'textiles': .06,  'wood': .03,  'rubber': .03},
              'Very Wet':       {'food': .4,  'diapers': .4,  'green': .17, 'paper_cardboard': .07,  'textiles': .07,  'wood': .035, 'rubber': .035}
             }

#k_defaults = pd.DataFrame(k_defaults).T

# Function to get precipitation zone from annual rainfall
def get_precipitation_zone(rainfall):
    # Unit is mm
    if rainfall < 500:
        return "Dry"
    elif rainfall < 1000:
        return "Moderately Dry"
    elif rainfall < 1500:
        return "Moderately Wet"
    elif rainfall < 2000:
        return "Wet"
    else:
        return "Very Wet"
    
L_0 = {'food': 70, 'diapers': 112, 'green': 93, 'paper_cardboard': 186, 
       'textiles': 112, 'wood': 200, 'rubber': 100}

oxidation_factor = {'with_lfg':{'landfill': 0.22, 'controlled_dumpsite': 0.1, 
                                'dumpsite': 0, 'remediated_to_landfill': 0.18}, 
                    'without_lfg':{'landfill': 0.1, 'controlled_dumpsite': 0.05, 
                                   'dumpsite': 0, 'remediated_to_landfill': 0.1}}

#mef_compost = 0.005876238822222 # Unit is Mg CO2e/Mg of organic waste, wtf
mef_anaerobic = 0.26/1000*1.1023 # Unit is Mg CH4/Mg organic waste...wtf 
ch4_to_co2e = 28

gas_capture_efficiency = {'landfill': 0.6, 'controlled_dumpsite': 0.45, 'dumpsite': 0}

landfill_default_regions = set(['Eastern Asia', 'Eastern Europe', 'North America', 'Northern Europe', 'Southern Europe', 'Western Europe'])

# These numbers are kind of weird. I think...
# Does this mean...waste that isn't diverted? But also is landfilled, as opposed to untracked?
# These are from IPCC, regions are slightly weird....SWEET has Central and Southern Asia, IPCC has south central and western...using south central for western here. 
# Africa is a single average and rest of oceania is from aus/nz

fraction_open_dumped = {
    'Australia and New Zealand' : 0.0,
    'Caribbean' : 0.03,
    'Central America' : 0.13,
    'Eastern Africa' : 0.98,
    'Eastern Asia' : 0.0,
    'Eastern Europe' : 0.0,
    'Middle Africa' : 0.95,
    "North America" : 0.0,
    "Northern Africa" : 0.79,
    "Northern Europe" : 0.0,
    "Rest of Oceania" : np.nan,
    "South America" : 0.43,
    "Central Asia" : np.nan,
    "South-Eastern Asia" : np.nan,
    "Southern Africa" : np.nan,
    "Southern Europe" : 0.0,
    "Western Africa" : 0.0,
    "Western Asia" : 0.11,
    "Western Europe" : 0.0,
    "Southern Asia" : np.nan
}

fraction_landfilled = {
    'Australia and New Zealand' : 0.69,
    'Caribbean' : 0.78,
    'Central America' : 0.62,
    'Eastern Africa' : 0.0,
    'Eastern Asia' : 0.23,
    'Eastern Europe' : 0.71,
    'Middle Africa' : 0.0,
    "North America" : 0.22,
    "Northern Africa" : 0.17,
    "Northern Europe" : 0.47,
    "Rest of Oceania" : np.nan,
    "South America" : 0.40,
    "Central Asia" : np.nan,
    "South-Eastern Asia" : np.nan,
    "Southern Africa" : np.nan,
    "Southern Europe" : 0.76,
    "Western Africa" : 0.64,
    "Western Asia" : 0.68,
    "Western Europe" : 0.08,
    "Southern Asia" : np.nan
}

fraction_incinerated = {
    'Australia and New Zealand' : 0.04,
    'Caribbean' : 0.0,
    'Central America' : 0.0,
    'Eastern Africa' : 0.0,
    'Eastern Asia' : 0.24,
    'Eastern Europe' : 0.06,
    'Middle Africa' : 0.0,
    "North America" : 0.26,
    "Northern Africa" : 0.0,
    "Northern Europe" : 0.20,
    "Rest of Oceania" : np.nan,
    "South America" : 0.0,
    "Central Asia" : np.nan,
    "South-Eastern Asia" : np.nan,
    "Southern Africa" : np.nan,
    "Southern Europe" : 0.04,
    "Western Africa" : 0.0,
    "Western Asia" : 0.08,
    "Western Europe" : 0.40,
    "Southern Asia" : np.nan
}

fraction_composted = {
    'Australia and New Zealand' : 0.0,
    'Caribbean' : 0.01,
    'Central America' : 0.0,
    'Eastern Africa' : 0.01,
    'Eastern Asia' : 0.0,
    'Eastern Europe' : 0.04,
    'Middle Africa' : 0.0,
    "North America" : 0.13,
    "Northern Africa" : 0.0,
    "Northern Europe" : 0.09,
    "Rest of Oceania" : 0.0,
    "South America" : 0.0,
    "Central Asia" : np.nan,
    "South-Eastern Asia" : np.nan,
    "Southern Africa" : np.nan,
    "Southern Europe" : 0.03,
    "Western Africa" : 0.0,
    "Western Asia" : 0.01,
    "Western Europe" : 0.21,
    "Southern Asia" : np.nan
}

# Includes recycling...sometimes, seems like junk. Also, don't try adding this stuff to 100. 
fraction_unspecified = {
    'Australia and New Zealand' : 0.27,
    'Caribbean' : 0.18,
    'Central America' : 0.25,
    'Eastern Africa' : 0.01,
    'Eastern Asia' : 0.52,
    'Eastern Europe' : 0.19,
    'Middle Africa' : 0.05,
    "North America" : 0.38,
    "Northern Africa" : 0.04,
    "Northern Europe" : 0.24,
    "Rest of Oceania" : np.nan,
    "South America" : 0.18,
    "Central Asia" : np.nan,
    "South-Eastern Asia" : np.nan,
    "Southern Africa" : np.nan,
    "Southern Europe" : 0.17,
    "Western Africa" : 0.36,
    "Western Asia" : 0.12,
    "Western Europe" : 0.31,
    "Southern Asia" : np.nan
}

fraction_open_dumped_country = {
    'Japan': 0.0,
    'Republic of Korea': 0.0,
    'Singapore': 0.0,
    'Armenia': 0.0,
    'Cyprus': 0.0,
    'Israel': 0.0,
    'Jordan': 0.0,
    'Kuwait': 0.0,
    'Lebanon': 0.37,
    'Palestine': 0.0,
    'Syrian Arab Republic': 0.6,
    'Turkey': 0.0,
    'Algeria': 0.97,
    'Morocco': 0.95,
    'Tunisia': 0.45,
    'Madagascar': 0.96,
    'Mauritius': 0.98,
    'Uganda': 1.0,
    'Cameroon': 0.95,
    'Niger': 0.0,
    'Bulgaria': 0.0,
    'Czechia': 0.0,
    'Hungary': 0.0,
    'Poland': 0.0,
    'Romania': 0.0,
    'Slovakia': 0.0,
    'Denmark': 0.0,
    'Estonia': 0.0,
    'Finland': 0.0,
    'Iceland': 0.0,
    'Ireland': 0.0,
    'Latvia': 0.0,
    'Lithuania': 0.0,
    'Norway': 0.0,
    'Sweden': 0.0,
    'United Kingdom': 0.0,
    'Bosnia and Herzegovina': 0.0,
    'Croatia': 0.0,
    'Greece': 0.0,
    'Italy': 0.0,
    'Malta': 0.0,
    'Montenegro': 0.0,
    'Portugal': 0.0,
    'Serbia': 0.0,
    'Slovenia': 0.0,
    'Spain': 0.0,
    'Macedonia': 0.0,
    'Austria': 0.0,
    'Belgium': 0.0,
    'France': 0.0,
    'Germany': 0.0,
    'Luxembourg': 0.0,
    'Netherlands': 0.0,
    'Switzerland': 0.0,
    'Anguilla': 0.0,
    'Antigua and Barbuda': 0.0,
    'Cuba': 0.0,
    'Dominica': 0.0,
    'Grenada': 0.0,
    'Haiti': 0.24,
    'Jamaica': 0.0,
    'Saint Kitts and Nevis': 0.0,
    'Saint Lucia': 0.0,
    'Saint Vincent and the Grenadines': 0.0,
    'Trinidad and Tobago': 0.06,
    'Belize': 0.0,
    'Costa Rica': 0.22,
    'Guatemala': 0.0,
    'Mexico': 0.0,
    'Nicaragua': 0.34,
    'Panama': 0.2,
    'Chile': 0.0,
    'Colombia': 0.54,
    'Guyana': 0.37,
    'Paraguay': 0.42,
    'Peru': 0.19,
    'Suriname': 1.0,
    'Uruguay': 0.32,
    'Venezuela': 0.59,
    'Bermuda': 0.0,
    'Canada': 0.0,
    'United States of America': 0.0,
    'Australia': 0.0,
    'New Zealand': 0.0,
}
fraction_open_dumped_country = {country_to_iso3[country]: value for country, value in fraction_open_dumped_country.items()}

fraction_landfilled_country = {
    'Japan': 0.01,
    'Republic of Korea': 0.18,
    'Singapore': 0.03,
    'Armenia': 1.0,
    'Cyprus': 0.86,
    'Israel': 0.89,
    'Jordan': 0.85,
    'Kuwait': 0.75,
    'Lebanon': 0.46,
    'Palestine': 0.29,
    'Syrian Arab Republic': 0.23,
    'Turkey': 0.84,
    'Algeria': 0.0,
    'Morocco': 0.01,
    'Tunisia': 0.5,
    'Madagascar': 0.0,
    'Mauritius': 0.0,
    'Uganda': 0.0,
    'Cameroon': 0.0,
    'Niger': 0.64,
    'Bulgaria': 0.74,
    'Czechia': 0.65,
    'Hungary': 0.7,
    'Poland': 0.62,
    'Romania': 0.76,
    'Slovakia': 0.77,
    'Denmark': 0.03,
    'Estonia': 0.66,
    'Finland': 0.45,
    'Iceland': 0.72,
    'Ireland': 0.53,
    'Latvia': 0.91,
    'Lithuania': 0.86,
    'Norway': 0.06,
    'Sweden': 0.01,
    'United Kingdom': 0.46,
    'Bosnia and Herzegovina': 0.82,
    'Croatia': 0.94,
    'Greece': 0.83,
    'Italy': 0.46,
    'Malta': 0.91,
    'Montenegro': 0.88,
    'Portugal': 0.62,
    'Serbia': 0.71,
    'Slovenia': 0.57,
    'Spain': 0.62,
    'Macedonia': 1.0,
    'Austria': 0.03,
    'Belgium': 0.02,
    'France': 0.31,
    'Germany': 0.0,
    'Luxembourg': 0.18,
    'Netherlands': 0.02,
    'Switzerland': 0.0,
    'Anguilla': 1.0,
    'Antigua and Barbuda': 1.0,
    'Cuba': 0.84,
    'Dominica': 1.0,
    'Grenada': 0.9,
    'Haiti': 0.0,
    'Jamaica': 1.0,
    'Saint Kitts and Nevis': 1.0,
    'Saint Lucia': 1.0,
    'Saint Vincent and the Grenadines': 0.85,
    'Trinidad and Tobago': 0.0,
    'Belize': 1.0,
    'Costa Rica': 0.72,
    'Guatemala': 0.22,
    'Mexico': 0.96,
    'Nicaragua': 0.28,
    'Panama': 0.56,
    'Chile': 1.0,
    'Colombia': 0.46,
    'Guyana': 0.59,
    'Paraguay': 0.44,
    'Peru': 0.66,
    'Suriname': 0.0,
    'Uruguay': 0.03,
    'Venezuela': 0.0,
    'Bermuda': 0.12,
    'Canada': 0.0,
    'United States of America': 0.54,
    'Australia': 0.52,
    'New Zealand': 0.85,
}
fraction_landfilled_country = {country_to_iso3[country]: value for country, value in fraction_landfilled_country.items()}

fraction_incinerated_country = {
    'Japan': 0.76,
    'Republic of Korea': 0.22,
    'Singapore': 0.4,
    'Armenia': 0.0,
    'Cyprus': 0.0,
    'Israel': 0.0,
    'Jordan': 0.0,
    'Kuwait': 0.0,
    'Lebanon': 0.0,
    'Palestine': 0.69,
    'Syrian Arab Republic': 0.0,
    'Turkey': 0.0,
    'Algeria': 0.0,
    'Morocco': 0.0,
    'Tunisia': 0.0,
    'Madagascar': 0.0,
    'Mauritius': 0.0,
    'Uganda': 0.0,
    'Cameroon': 0.0,
    'Niger': 0.0,
    'Bulgaria': 0.0,
    'Czechia': 0.15,
    'Hungary': 0.1,
    'Poland': 0.0,
    'Romania': 0.0,
    'Slovakia': 0.11,
    'Denmark': 0.48,
    'Estonia': 0.0,
    'Finland': 0.22,
    'Iceland': 0.08,
    'Ireland': 0.04,
    'Latvia': 0.0,
    'Lithuania': 0.0,
    'Norway': 0.5,
    'Sweden': 0.51,
    'United Kingdom': 0.13,
    'Bosnia and Herzegovina': 0.0,
    'Croatia': 0.0,
    'Greece': 0.0,
    'Italy': 0.17,
    'Malta': 0.0,
    'Montenegro': 0.0,
    'Portugal': 0.19,
    'Serbia': 0.0,
    'Slovenia': 0.01,
    'Spain': 0.09,
    'Macedonia': 0.0,
    'Austria': 0.35,
    'Belgium': 0.4,
    'France': 0.34,
    'Germany': 0.37,
    'Luxembourg': 0.36,
    'Netherlands': 0.49,
    'Switzerland': 0.5,
    'Anguilla': 0.0,
    'Antigua and Barbuda': 0.0,
    'Cuba': 0.0,
    'Dominica': 0.0,
    'Grenada': 0.0,
    'Haiti': 0.0,
    'Jamaica': 0.0,
    'Saint Kitts and Nevis': 0.0,
    'Saint Lucia': 0.0,
    'Saint Vincent and the Grenadines': 0.0,
    'Trinidad and Tobago': 0.0,
    'Belize': 0.0,
    'Costa Rica': 0.72,
    'Guatemala': 0.22,
    'Mexico': 0.96,
    'Nicaragua': 0.28,
    'Panama': 0.0,
    'Chile': 0.0,
    'Colombia': 0.0,
    'Guyana': 0.0,
    'Paraguay': 0.0,
    'Peru': 0.0,
    'Suriname': 0.0,
    'Uruguay': 0.0,
    'Venezuela': 0.0,
    'Bermuda': 0.68,
    'Canada': 0.0,
    'United States of America': 0.12,
    'Australia': 0.08,
    'New Zealand': 0.0,
}
fraction_incinerated_country = {country_to_iso3[country]: value for country, value in fraction_incinerated_country.items()}

fraction_composted_country = {
    'Japan': 0.0,
    'Republic of Korea': 0.0,
    'Singapore': 0.0,
    'Armenia': 0.0,
    'Cyprus': 0.0,
    'Israel': 0.0,
    'Jordan': 0.0,
    'Kuwait': 0.0,
    'Lebanon': 0.08,
    'Palestine': 0.0,
    'Syrian Arab Republic': 0.04,
    'Turkey': 0.01,
    'Algeria': 0.01,
    'Morocco': 0.0,
    'Tunisia': 0.0,
    'Madagascar': 0.04,
    'Mauritius': 0.0,
    'Uganda': 0.0,
    'Cameroon': 0.0,
    'Niger': 0.0,
    'Bulgaria': 0.0,
    'Czechia': 0.02,
    'Hungary': 0.04,
    'Poland': 0.07,
    'Romania': 0.1,
    'Slovakia': 0.03,
    'Denmark': 0.18,
    'Estonia': 0.08,
    'Finland': 0.13,
    'Iceland': 0.05,
    'Ireland': 0.04,
    'Latvia': 0.01,
    'Lithuania': 0.02,
    'Norway': 0.16,
    'Sweden': 0.14,
    'United Kingdom': 0.15,
    'Bosnia and Herzegovina': 0.0,
    'Croatia': 0.01,
    'Greece': 0.02,
    'Italy': 0.12,
    'Malta': 0.0,
    'Montenegro': 0.0,
    'Portugal': 0.07,
    'Serbia': 0.0,
    'Slovenia': 0.02,
    'Spain': 0.12,
    'Macedonia': 0.0,
    'Austria': 0.32,
    'Belgium': 0.21,
    'France': 0.17,
    'Germany': 0.17,
    'Luxembourg': 0.19,
    'Netherlands': 0.24,
    'Switzerland': 0.17,
    'Anguilla': 0.0,
    'Antigua and Barbuda': 0.0,
    'Cuba': 0.11,
    'Dominica': 0.0,
    'Grenada': 0.0,
    'Haiti': 0.0,
    'Jamaica': 0.0,
    'Saint Kitts and Nevis': 0.0,
    'Saint Lucia': 0.0,
    'Saint Vincent and the Grenadines': 0.0,
    'Trinidad and Tobago': 0.0,
    'Belize': 0.0,
    'Costa Rica': 0.0,
    'Guatemala': 0.0,
    'Mexico': 0.0,
    'Nicaragua': 0.0,
    'Panama': 0.0,
    'Chile': 0.0,
    'Colombia': 0.0,
    'Guyana': 0.0,
    'Paraguay': 0.0,
    'Peru': 0.0,
    'Suriname': 0.0,
    'Uruguay': 0.0,
    'Venezuela': 0.0,
    'Bermuda': 0.18,
    'Canada': 0.12,
    'United States of America': 0.08,
    'Australia': 0.0,
    'New Zealand': 0.0,
}
fraction_composted_country = {country_to_iso3[country]: value for country, value in fraction_composted_country.items()}

fraction_unspecified_country = {
    'Japan': 0.22,
    'Republic of Korea': 0.61,
    'Singapore': 0.57,
    'Armenia': 0.0,
    'Cyprus': 0.14,
    'Israel': 0.11,
    'Jordan': 0.15,
    'Kuwait': 0.25,
    'Lebanon': 0.09,
    'Palestine': 0.02,
    'Syrian Arab Republic': 0.13,
    'Turkey': 0.16,
    'Algeria': 0.02,
    'Morocco': 0.04,
    'Tunisia': 0.05,
    'Madagascar': 0.0,
    'Mauritius': 0.02,
    'Uganda': 0.0,
    'Cameroon': 0.05,
    'Niger': 0.36,
    'Bulgaria': 0.26,
    'Czechia': 0.18,
    'Hungary': 0.16,
    'Poland': 0.31,
    'Romania': 0.14,
    'Slovakia': 0.09,
    'Denmark': 0.31,
    'Estonia': 0.26,
    'Finland': 0.2,
    'Iceland': 0.15,
    'Ireland': 0.4,
    'Latvia': 0.09,
    'Lithuania': 0.12,
    'Norway': 0.28,
    'Sweden': 0.34,
    'United Kingdom': 0.26,
    'Bosnia and Herzegovina': 0.18,
    'Croatia': 0.05,
    'Greece': 0.15,
    'Italy': 0.25,
    'Malta': 0.09,
    'Montenegro': 0.12,
    'Portugal': 0.11,
    'Serbia': 0.29,
    'Slovenia': 0.4,
    'Spain': 0.18,
    'Macedonia': 0.0,
    'Austria': 0.3,
    'Belgium': 0.37,
    'France': 0.18,
    'Germany': 0.46,
    'Luxembourg': 0.27,
    'Netherlands': 0.25,
    'Switzerland': 0.34,
    'Anguilla': 0.0,
    'Antigua and Barbuda': 0.0,
    'Cuba': 0.04,
    'Dominica': 0.0,
    'Grenada': 0.1,
    'Haiti': 0.76,
    'Jamaica': 0.0,
    'Saint Kitts and Nevis': 0.0,
    'Saint Lucia': 0.0,
    'Saint Vincent and the Grenadines': 0.15,
    'Trinidad and Tobago': 0.94,
    'Belize': 0.0,
    'Costa Rica': 0.06,
    'Guatemala': 0.78,
    'Mexico': 0.04,
    'Nicaragua': 0.38,
    'Panama': 0.24,
    'Chile': 0.0,
    'Colombia': 0.0,
    'Guyana': 0.04,
    'Paraguay': 0.14,
    'Peru': 0.15,
    'Suriname': 0.0,
    'Uruguay': 0.66,
    'Venezuela': 0.41,
    'Bermuda': 0.02,
    'Canada': 0.88,
    'United States of America': 0.26,
    'Australia': 0.4,
    'New Zealand': 0.15,
}
fraction_unspecified_country = {country_to_iso3[country]: value for country, value in fraction_unspecified_country.items()}

# #%%
# for country, value in msw_per_capita_country.items():
#     assert country in lut['country'].values, country

# for country, value in fraction_open_dumped_country.items():
#     assert country in lut['country'].values, country

# for country, value in fraction_landfilled_country.items():
#     assert country in lut['country'].values, country

# for country, value in fraction_incinerated_country.items():
#     assert country in lut['country'].values, country

# for country, value in fraction_composted_country.items():
#     assert country in lut['country'].values, country

# for country, value in fraction_unspecified_country.items():
#     assert country in lut['country'].values, country
    
# # %%
